<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <decisions>
        <description>This element checks if the new department is found within the accountchart records. If not we need to create a new one.</description>
        <name>dcsAccountChartNewDepartmentFound</name>
        <label>dcsAccountChartNewDepartmentFound</label>
        <locationX>971</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>dcsDepartmentEmpty</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Department Not Found</defaultConnectorLabel>
        <rules>
            <name>Department_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccountChartNewDepartment</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getContactChart2</targetReference>
            </connector>
            <label>Department Found</label>
        </rules>
    </decisions>
    <decisions>
        <description>This element checks if the Account Chart Organization is found. We need this one to eventually create a new department below this level.</description>
        <name>dcsAccountChartOrganizationFound</name>
        <label>dcsAccountChartOrganizationFound</label>
        <locationX>1610</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Not Found</defaultConnectorLabel>
        <rules>
            <name>Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccountChart</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getAccountChartNewDepartment</targetReference>
            </connector>
            <label>Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>dcsContactChartFound</name>
        <label>dcsContactChartFound</label>
        <locationX>1942</locationX>
        <locationY>1079</locationY>
        <defaultConnector>
            <targetReference>rcContactChart</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>ContactChart Not Found</defaultConnectorLabel>
        <rules>
            <name>ContactChart_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getContactChart</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_rdContactChart</targetReference>
            </connector>
            <label>ContactChart Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>dcsContactChartFound2</name>
        <label>dcsContactChartFound</label>
        <locationX>314</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>rcContactChart2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>ContactChart Not Found</defaultConnectorLabel>
        <rules>
            <name>ContactChart_Found2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getContactChart2</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>rdContactChart2</targetReference>
            </connector>
            <label>ContactChart Found</label>
        </rules>
    </decisions>
    <decisions>
        <description>This element will check if there are any contact charts related to the account chart are found. If not we can delete the accountchart record.</description>
        <name>dcsContactChartsFound</name>
        <label>dcsContactChartsFound</label>
        <locationX>886</locationX>
        <locationY>1511</locationY>
        <defaultConnector>
            <targetReference>rdPreviousDepartmentContactChart_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Found</defaultConnectorLabel>
        <rules>
            <name>Contact_Charts_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getContactChartsfromAccountChart</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Contact Charts Found</label>
        </rules>
    </decisions>
    <decisions>
        <description>This element checks if the department has been emptied.</description>
        <name>dcsDepartmentEmpty</name>
        <label>dcsDepartmentEmpty</label>
        <locationX>1628</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>rcAccountChart</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Empty</defaultConnectorLabel>
        <rules>
            <name>Empty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Department</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Department</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getContactChartPreviousDepartment</targetReference>
            </connector>
            <label>Empty</label>
        </rules>
    </decisions>
    <decisions>
        <description>This element will check if the previous department is found in the account chart object. If so we can delete it.</description>
        <name>dcsPreviousAccountChartFound</name>
        <label>dcsPreviousAccountChartFound</label>
        <locationX>1084</locationX>
        <locationY>1295</locationY>
        <defaultConnectorLabel>Not Found</defaultConnectorLabel>
        <rules>
            <name>Previous_Department_Found_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getAccountChartPreviousDepartment</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getContactChartsfromAccountChart</targetReference>
            </connector>
            <label>Previous Department Found</label>
        </rules>
    </decisions>
    <decisions>
        <description>This element will check if the previous department is found in the contact chart object. If so we can delete it.</description>
        <name>dcsPreviousContactChartFound</name>
        <label>dcsPreviousContactChartFound</label>
        <locationX>1315</locationX>
        <locationY>971</locationY>
        <defaultConnectorLabel>Not Found</defaultConnectorLabel>
        <rules>
            <name>Previous_Department_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getContactChartPreviousDepartment</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>rdPreviousDepartmentContactChart</targetReference>
            </connector>
            <label>Previous Department Found</label>
        </rules>
    </decisions>
    <description>This flow will update or create Account and Contact chart records when the department is newly entered or is changed.</description>
    <environments>Default</environments>
    <interviewLabel>Contact - RTFL01 - Update Department Info on Account and Contact Chart {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Contact - RTFL01 - Update Department Info on Account and Contact Chart</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>This element will create a new AccountChart record on the related accountid with the new Department Name.</description>
        <name>rcAccountChart</name>
        <label>rcAccountChart</label>
        <locationX>1942</locationX>
        <locationY>863</locationY>
        <assignRecordIdToReference>varNewAccountChartId</assignRecordIdToReference>
        <connector>
            <targetReference>getContactChart</targetReference>
        </connector>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>$Record.Department</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>albiraSolutions__AccountID__c</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>albiraSolutions__parentChartID__c</field>
            <value>
                <elementReference>getAccountChart.Id</elementReference>
            </value>
        </inputAssignments>
        <object>albiraSolutions__AccountChart__c</object>
    </recordCreates>
    <recordCreates>
        <description>This element will create a new ContactChart record and relates it to the Newly created AccountChart</description>
        <name>rcContactChart</name>
        <label>rcContactChart</label>
        <locationX>1942</locationX>
        <locationY>1379</locationY>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>$Record.Department</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>albiraSolutions__AccountChart__c</field>
            <value>
                <elementReference>varNewAccountChartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>albiraSolutions__AccountID__c</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>albiraSolutions__Contact__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>albiraSolutions__ContactChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>This element will create a new ContactChart record and relates it to the Newly created AccountChart</description>
        <name>rcContactChart2</name>
        <label>rcContactChart</label>
        <locationX>314</locationX>
        <locationY>1403</locationY>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>$Record.Department</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>albiraSolutions__AccountChart__c</field>
            <value>
                <elementReference>getAccountChartNewDepartment.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>albiraSolutions__AccountID__c</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>albiraSolutions__Contact__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>albiraSolutions__ContactChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <description>This element will delete the contact chart because with an update action we cannot update the AccountChart id. So we need to create a new record.</description>
        <name>Copy_1_of_rdContactChart</name>
        <label>rdContactChart</label>
        <locationX>1810</locationX>
        <locationY>1187</locationY>
        <connector>
            <targetReference>rcContactChart</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getContactChart.Id</elementReference>
            </value>
        </filters>
        <object>albiraSolutions__ContactChart__c</object>
    </recordDeletes>
    <recordDeletes>
        <description>This element will delete the contact chart because with an update action we cannot update the AccountChart id. So we need to create a new record.</description>
        <name>rdContactChart2</name>
        <label>rdContactChart</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>rcContactChart2</targetReference>
        </connector>
        <faultConnector>
            <targetReference>subFaultConnector</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getContactChart2.Id</elementReference>
            </value>
        </filters>
        <object>albiraSolutions__ContactChart__c</object>
    </recordDeletes>
    <recordDeletes>
        <description>This element will delete the contact chart.</description>
        <name>rdPreviousDepartmentContactChart</name>
        <label>rdPreviousDepartmentContactChart</label>
        <locationX>1084</locationX>
        <locationY>1079</locationY>
        <connector>
            <targetReference>getAccountChartPreviousDepartment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getContactChartPreviousDepartment.Id</elementReference>
            </value>
        </filters>
        <object>albiraSolutions__ContactChart__c</object>
    </recordDeletes>
    <recordDeletes>
        <description>This element will delete the contact chart.</description>
        <name>rdPreviousDepartmentContactChart_0</name>
        <label>rdPreviousDepartmentContactChart</label>
        <locationX>1018</locationX>
        <locationY>1619</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getAccountChartPreviousDepartment.Id</elementReference>
            </value>
        </filters>
        <object>albiraSolutions__AccountChart__c</object>
    </recordDeletes>
    <recordLookups>
        <description>This element retrieves the accountchart record of the related account where the name starts with &apos;Organization&apos;. This is the top of the organization chart for this account. We need this to eventually create a new department when this does not exist.</description>
        <name>getAccountChart</name>
        <label>getAccountChart</label>
        <locationX>1610</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>dcsAccountChartOrganizationFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>albiraSolutions__AccountID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>StartsWith</operator>
            <value>
                <stringValue>Organization</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>albiraSolutions__AccountChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This element retrieves the Account Chart record with the new department name</description>
        <name>getAccountChartNewDepartment</name>
        <label>getAccountChartNewDepartment</label>
        <locationX>971</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>dcsAccountChartNewDepartmentFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>albiraSolutions__AccountID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Department</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>albiraSolutions__AccountChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This department will retrieve the previous department from the account chart record.</description>
        <name>getAccountChartPreviousDepartment</name>
        <label>getAccountChartPreviousDepartment</label>
        <locationX>1084</locationX>
        <locationY>1187</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>dcsPreviousAccountChartFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Department</elementReference>
            </value>
        </filters>
        <filters>
            <field>albiraSolutions__AccountID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>albiraSolutions__AccountChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This element will get the contact chart of this contact related to this account.</description>
        <name>getContactChart</name>
        <label>getContactChart</label>
        <locationX>1942</locationX>
        <locationY>971</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>dcsContactChartFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>albiraSolutions__Contact__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>albiraSolutions__AccountID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>albiraSolutions__ContactChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This element will get the contact chart of this contact related to this account.</description>
        <name>getContactChart2</name>
        <label>getContactChart</label>
        <locationX>314</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>dcsContactChartFound2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>albiraSolutions__Contact__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>albiraSolutions__AccountID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>albiraSolutions__ContactChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This element will retrieve the previous department from the contact chart record.</description>
        <name>getContactChartPreviousDepartment</name>
        <label>getContactChartPreviousDepartment</label>
        <locationX>1315</locationX>
        <locationY>863</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>dcsPreviousContactChartFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Department</elementReference>
            </value>
        </filters>
        <filters>
            <field>albiraSolutions__AccountID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>albiraSolutions__ContactChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This element will retrieve all contact charts under the Account chart. This is necessary to check if we can delete the account chart or not.</description>
        <name>getContactChartsfromAccountChart</name>
        <label>getContactChartsfromAccountChart</label>
        <locationX>886</locationX>
        <locationY>1403</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>dcsContactChartsFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>albiraSolutions__AccountID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getAccountChartPreviousDepartment.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>albiraSolutions__ContactChart__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1484</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getAccountChart</targetReference>
        </connector>
        <filterFormula>AND (
({!$Setup.BypassSettings__c.Flows__c} = False),
OR (
ISNEW(),
ISCHANGED ({!$Record.Department})))</filterFormula>
        <object>Contact</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>subFaultConnector</name>
        <label>subFaultConnector</label>
        <locationX>314</locationX>
        <locationY>1079</locationY>
        <flowName>FAULT_CONNECTOR</flowName>
        <inputAssignments>
            <name>varEmailCurrentUser</name>
            <value>
                <elementReference>$User.Email</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varErrorLocation</name>
            <value>
                <stringValue>rdContactChart</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varFlowFaultMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varFlowName</name>
            <value>
                <stringValue>Contact - RTFL01 - Update Department Info on Account and Contact Chart</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varNameCurrentUser</name>
            <value>
                <elementReference>$User.FullNameForm__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varObject</name>
            <value>
                <stringValue>Contact</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>varNewAccountChartId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
